/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    void swap(ListNode* node1, ListNode* node2)
    {
        int temp;
        temp = node1->val;
        node1->val = node2->val;
        node2->val = temp;
        
        if(node2->next == nullptr)
        {
            return;
        }
        if(node2->next->next == nullptr)
        {
            return;
        }

        swap(node2->next, node2->next->next);
    }
    ListNode* swapPairs(ListNode* head) {
        
        ListNode* curr_ptr = head;
        int total_ele = 0;
        
        if(head == nullptr || head->next == nullptr)
        {
            return head;
        }
        
        cout << total_ele;
        
        swap(head, head->next);
        
        return head;
    }
};
