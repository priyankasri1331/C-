/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) 
    {
        vector<int> vals;
        if(root == nullptr)
        {
            return vals;
        }
        
        stack<TreeNode*> stk;
        stk.push(root);
        
        bool goright = false;
        
        while(!stk.empty())
        {
            TreeNode *tmp = stk.top();
            if (goright)
            {
                vals.push_back(tmp->val);
                stk.pop();
                if(tmp->right != nullptr)
                {
                    stk.push(tmp -> right);
                    goright = false;
                }
            }
            
            else
            {
                if (tmp -> left != nullptr)
                {
                    stk.push(tmp -> left);
                }
                else
                {
                    goright = true;
                }
            }
        }
        return vals;
    }
};
